set(RES_PATH "${CMAKE_CURRENT_SOURCE_DIR}/res/")
configure_file ("${CMAKE_CURRENT_SOURCE_DIR}/inc/config.h.in" "${CMAKE_CURRENT_BINARY_DIR}/inc/config.h")

include_directories(. inc ../external/tinyobjloader ${CMAKE_CURRENT_BINARY_DIR}/inc)
file(GLOB_RECURSE MATH_INC inc/math/*.h)
file(GLOB_RECURSE MATH_SRC src/math/*.cpp)
file(GLOB_RECURSE UTIL_INC inc/util/*.h)
file(GLOB_RECURSE UTIL_SRC src/util/*.cpp)
file(GLOB_RECURSE VKWRAP_INC inc/vkwrap/*.h)
file(GLOB_RECURSE VKWRAP_SRC src/vkwrap/*.cpp)
file(GLOB INC inc/*.h)
file(GLOB SRC src/*.cpp)

add_definitions(-DUNICODE -DVK_USE_PLATFORM_WIN32_KHR)
if(MSVC)
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:mainCRTStartup")
	add_executable(nIceFramework WIN32 ${MATH_INC} ${MATH_SRC} ${UTIL_INC} ${UTIL_SRC} ${VKWRAP_INC} ${VKWRAP_SRC} ${INC} ${SRC})
else()
	add_executable(nIceFramework ${MATH_INC} ${MATH_SRC} ${UTIL_INC} ${UTIL_SRC} ${VKWRAP_INC} ${VKWRAP_SRC} ${INC} ${SRC})
endif()

source_group(inc\\math FILES ${MATH_INC})
source_group(src\\math FILES ${MATH_SRC})
source_group(inc\\util FILES ${UTIL_INC})
source_group(src\\util FILES ${UTIL_SRC})
source_group(inc\\vkwrap FILES ${VKWRAP_INC})
source_group(src\\vkwrap FILES ${VKWRAP_SRC})
source_group(inc FILES ${INC})
source_group(src FILES ${SRC})

target_link_libraries (nIceFramework tinyobjloader ${CMAKE_CURRENT_SOURCE_DIR}/lib/vulkan-1.lib)
